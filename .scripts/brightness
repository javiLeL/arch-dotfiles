#!/bin/bash

#   ▄▄▄██▀▀▀ ▄▄▄       ██▒   █▓ ██▓      ██▓    ▓█████  ██▓    
#     ▒██   ▒████▄    ▓██░   █▒▓██▒     ▓██▒    ▓█   ▀ ▓██▒    
#     ░██   ▒██  ▀█▄   ▓██  █▒░▒██▒     ▒██░    ▒███   ▒██░    
#  ▓██▄██▓  ░██▄▄▄▄██   ▒██ █░░░██░     ▒██░    ▒▓█  ▄ ▒██░    
#   ▓███▒    ▓█   ▓██▒   ▒▀█░  ░██░ ██▓ ░██████▒░▒████▒░██████▒
#   ▒▓▒▒░    ▒▒   ▓▒█░   ░ ▐░  ░▓   ▒▓▒ ░ ▒░▓  ░░░ ▒░ ░░ ▒░▓  ░
#   ▒ ░▒░     ▒   ▒▒ ░   ░ ░░   ▒ ░ ░▒  ░ ░ ▒  ░ ░ ░  ░░ ░ ▒  ░
#   ░ ░ ░     ░   ▒        ░░   ▒ ░ ░     ░ ░      ░     ░ ░   
#   ░   ░         ░  ░      ░   ░    ░      ░  ░   ░  ░    ░  ░
#                          ░         ░                         

down(){
    TOADD=5
    if [ $1 != "" ]; then
        TOADD=$1
    fi
    brightnessctl s "$TOADD%-" 
}
add(){
    echo "Parameter #1 is $#"
    TOADD=5
    if [ $1 != "" ]; then
        TOADD=$1
    fi
    brightnessctl s "+$TOADD%" 
}
print_usage(){
    echo "Scrip to change the brightnessctl of the screen with a notification"
    echo ""
    echo "Syntaxis: brightnessctl [options] [arguments]"
    echo ""
    echo "Where options include:"
    echo ""
    echo "      -a or --add                By default set +5%"
    echo "      -d or --down               By default set -5%"
    echo ""
}
if [ "$#" == "0" ]; then
    print_usage
else        
    while test $# -gt 0; do
        case "$1" in
            -h|--help)
                print_usage
                shift
                ;;
            -a|--add)
                shift
                add "$1"
                shift
                ;;
            -d|--down)
                shift
                down "$1"
                shift
                ;;
            *)
                break 
                ;;
        esac
    done
    porcent=$(($(brightnessctl g)*100/$(brightnessctl m)))
    icon=(󰃞 󰃝 󰃟 󰃠)
    iconNum=0

    if [ $porcent = 0 ]; then
        iconNum=0
    elif [ $porcent -gt 0 ] && [ $porcent -le 40 ]; then
        iconNum=1
    elif [ $porcent -gt 40 ] && [ $porcent -le 70 ]; then
        iconNum=2
    elif [ $porcent -gt 70 ] && [ $porcent -le 100 ]; then
        iconNum=3
    fi
    dunstify "${icon[$iconNum]} Brightnes = $porcent" -a some_volume_notifiers -t 1000 -h int:value:$porcent -h string:synchronous:'$bar' --replace=555
fi
